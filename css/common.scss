---
# Only the main Sass file needs front matter (the dashes are enough)
---
@charset "utf-8";
/********************************************/
/*	common.css
/*******************************************/
@import 'reset',
	'css3-mixins',
	'vars',
	'fontface',
	'outdatedbrowser',
	'buttons',
	'header',
	'home',
	'about',
	'works',
	'contact';

/********************/
/* ===[ COMMON ]=== */
/********************/
*::-webkit-selection { background: $color-global-red; color: $color-global-white; text-shadow: none; }
::-moz-selection { background: $color-global-red; color: $color-global-white; text-shadow: none; }
::selection { background: $color-global-red; color: $color-global-white; text-shadow: none; }

/**********************/
/* ===[ FONTELLO ]=== */
/**********************/
[class^="icon-"]:before, [class*=" icon-"]:before {
	font-family: "fontello";
	font-style: normal;
	font-weight: normal;
	speak: none;

	display: inline-block;
	text-decoration: inherit;
	width: 1em;
	margin-right: .2em;
	text-align: center;
	font-variant: normal;
	text-transform: none;
	line-height: 1em;
	margin-left: .2em;
}

/******************/
/* ===[ GRID ]=== */
/******************/
.grids {
	width: auto;
	max-width: $gridWidth;
	margin-left: -(percentage( $gutterWidth / $gridWidth ));
	clear: both;
	list-style: none;
	overflow: hidden;
}

// Generates placeholders instead of styles, these won't be output in our CSS
@for $i from 1 to ($totalColumns + 1) {
	.grid_#{$i}{
		@include column($i);
	}

}
[class^="grid_"] {
	float: left;
	&.alpha {
		margin-left: 0;
	}
	&.omega {
		margin-right: 0;
	}
}

/*********************/
/* ===[ LOADING ]=== */
/*********************/
.pageload-overlay {
	position: fixed; width: 100%; height: 100%; top: 0; left: 0; visibility: hidden; z-index: 12;
	&:after {
		content: ''; position: fixed; width: 100px; height: 100px; top: 50%; left: 50%; margin: -50px 0 0 -50px; visibility: hidden; @include opacity(0); @include transition(opacity .15s $default-transition-easing, visibility .15s $default-transition-easing); z-index: 1000; background: url(/assets/gfx/img/lgo.svg) center center no-repeat; @include crossproperty('background-size', 'contain'); @include animation(heartbeat 1300ms ease 0s infinite normal);
	}
	&.show {
		visibility: visible;
	}
	&.pageload-loading {
		&:after {
			opacity: 1; visibility: visible; @include transition(opacity .3s $default-transition-easing);
		}
	}
	svg {
		position: absolute; top: 0; left: 0; pointer-events: none;
		path {
			fill: $color-global-red;
		}
	}
}

/**********************/
/* ===[ APP-VIEW ]=== */
/**********************/
html {
	font-smooth:always; -webkit-font-smoothing: antialiased; -moz-font-smoothing: antialiased; height: 100%; width: 100%;
}
body {
	font-smooth:always; -webkit-font-smoothing: antialiased; -moz-font-smoothing: antialiased; height: 100%; width: 100%; background: $color-global-black; color: $color-global-white; padding: 0; margin: 0; font-size: 75%; line-height: 1.3em; font-family: $font-family-standard;

	// BP MEDIUM
	@include bp-medium {
		font-size: 70%;
	}

	// BP SMALL
	@include bp-small {
		font-size: 60%;
	}
	&.no-js {
		.app-view {
			section.page-view {
				display: none;
			}
		}
	}
	&.scrollable {
		.app-view {
			section.page-view {
				&.page-view#works-list {
					.handle {
						cursor: default;
						&.disabled {
							position: static;
						}
					}
				}
			}
		}
	}
	.app-view {
		height: 100%; width: 100%; position: relative; overflow: hidden; @include crossproperty('perspective', '1000px');

		// BP SMALL
		@include bp-small {
			@include crossproperty('overflow-scrolling', 'touch');
		}
	}
}

section.page-view {
	height: 100%; @include transition(opacity 1s $default-transition-easing, transform 1s $default-transition-easing); @include opacity(0); @include crossproperty('transform', 'translate3d(0, -50px, -100px) rotateX(-20deg)');

	&.enter {
		 @include opacity(1); @include crossproperty('transform', 'translate3d(0, 0, 0) rotateX(0deg)');
	}
	&.open {
		@include crossproperty('transform', 'translate3D(0, 50px, -100px)'); @include opacity(.5);
	}
	.content {
		position: relative; z-index: 2; top: 15%; text-align: center; @include crossproperty('backface-visibility', 'hidden'); @include crossproperty('perspective', '1000'); @include crossproperty('backface-visibility', 'hidden');

		// BP SMALL
		@include bp-small {
			top: 20%;
		}

		h1 {
			font-size: 5em; text-transform: uppercase; line-height: 1.2em; margin-bottom: 1em; @include crossproperty('transform-style', 'preserve-3d'); @include crossproperty('perspective', '1000'); @include crossproperty('backface-visibility', 'hidden');

			// BP SMALL
			@include bp-small {
				font-size: 4.5em; margin-bottom: .5em;
			}

			&:after {
				@include transition(width 2s $default-transition-easing, margin 2s $default-transition-easing); position: absolute; top: 110%; left: 50%; width: 0; height: 2px; margin-left: 0; background: $color-global-red; content: " "; display: block;
			}
			&.lined:after {
				width: 10%; margin-left: -5%;
			}
		}
		h2 {
			font-size: 3em; text-transform: uppercase; line-height: 1.2em; margin-bottom: .2em; clear: both; @include crossproperty('transform-style', 'preserve-3d'); @include crossproperty('perspective', '1000'); @include crossproperty('backface-visibility', 'hidden');

			// BP SMALL
			@include bp-small {
				font-size: 2.5em;
			}
		}
		h3 {
			font-size: 2em; text-transform: uppercase; line-height: 1.2em; margin-bottom: 1em; font-weight: normal; @include crossproperty('transform-style', 'preserve-3d'); @include crossproperty('perspective', '1000'); @include crossproperty('backface-visibility', 'hidden');
			strong {
				font-weight: bold;
			}
		}
		h4 {
			font-size: 3em; text-transform: uppercase; line-height: 1.2em; margin-bottom: .2em; @include crossproperty('transform-style', 'preserve-3d'); @include crossproperty('perspective', '1000'); @include crossproperty('backface-visibility', 'hidden');
		}
		p {
			font-size: 1.5em; line-height: 1.2em; clear: both; margin-bottom: 1em; @include crossproperty('transform-style', 'preserve-3d'); @include crossproperty('perspective', '1000'); @include crossproperty('backface-visibility', 'hidden');
			a {
				color: $color-global-red;
				&:hover {
					text-decoration: none;
				}
			}
		}
		ul {
			margin-bottom: 1em; display: inline; float: left; position: relative; left: 50%; clear: both;
			li {
				font-size: 1.5em; line-height: 1.2em; margin: 0 0 .2em; text-align: left; list-style: disc inside; position: relative; right: 50%; white-space: nowrap;
			}
		}
	}
	img[data-type=background] {
		position: absolute; z-index: 1; left: 50%; top: 50%; @include opacity(0); @include crossproperty('transform-style', 'preserve-3d'); @include crossproperty('perspective', '1000'); @include crossproperty('backface-visibility', 'hidden');
	}
}

/**************/
/* ANIMATIONS */
/**************/
@include keyframes(heartbeat) {
	0%  { @include transform(scale(1));   }
	14% { @include transform(scale(1.3)); }
	28% { @include transform(scale(1));   }
	42% { @include transform(scale(1.3)); }
	70% { @include transform(scale(1));   }
}

@include keyframes(borderenter) {
	0% { border-color: transparent }
	100% { border-color: $color-global-white; }
}

@include keyframes(circleAnim) {
	0%  { @include transform(translate(-50%, -50%) scale(0)); }
	14% { @include transform(translate(-50%, -50%) scale(.5)); }
	28% { @include transform(translate(-50%, -50%) scale(.8)); }
	50% { @include transform(translate(-50%, -50%) scale(1.5)); }
	99% { @include transform(translate(-50%, -50%) scale(2)); @include opacity(0); }
	100% { @include transform(translate(-50%, -50%) scale(0)); @include opacity(0); }
}